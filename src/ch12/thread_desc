==프로세스와 쓰레드
--프로세스란? : 하나의 
	1)사용자가 어플리케이션을 실행하면 운영체제로부터 실행에 필요한 메모리를 할당 받아
		어플리케이션의 코드를 실행하고 이것이 프로세스이다.
	2)프로그램 -> 실행 -> 프로세스

==멀티 캐스팅이란?
	2가지 이상의 작업을 동시에 처리하는 것을 말한다

==멀티 쓰레드란?
	:하나의 프로세스가 2가지 이상의 작업을 처리하는 것을 말한다
	1)멀티 프로세스가 어플리케이션 단위의 멀티 태스킹이라면 
		멀티 쓰레드는 어플리케이션 내 멀티 태스킹이라고 할 수 있다.
	2)멀티 프로세스들은 운영체제로부터 할당받은 메모리를 가지고 실행하기 때문에 서로 독립적이다  
	3)멀티 스레드는 하나의 프로그램 내부에 생성되기 때문에 하나의 쓰레드가 예외를
		발생시키면 프로세스 자체가 종료 될 수 있어 예외 처리 신경써야 한다
	예) 빅데이터 처리의 시간을 줄이기 위해서 데이터를 분할해서 병렬로 처리
		다수의 클라이언트 요청을 처리하는 서버 개발

==메인 쓰레드
	1)모든 자바 어플리케이션은 메인 쓰레드(main thread)가 main() 메소드를 실행
		하면서 시작한다.
	2)메인 쓰레드는 main()메소드의 첫 코드부터 아래로 순차적으로 실행하고.
		이에 따라서 작업 쓰레드를 만들어서 병렬로 코드를 실행 할 수 있다.
		=>멀티 쓰레드를 생성해서 멀티 태스킹을 수행한다.
--싱글 쓰레드 어플리케이션에서는 메인쓰레드가 종료되면 프로세스도 종료된다
--멀티 쓰레드 어플리케이션에서는 실행중인 쓰레드가 하나라도 있다면, 프로세스도 종료되지 않는다
	즉, 메인쓰레드가 작업쓰레드보다 먼저 종료되더라도 작업쓰레드가 계속 실행중이라면
	프로세스는 종료되지 않는다.
	
--쓰레드 생성
방법 1)Thread 클래스를 상속받아서 생성하기
	형식> class 클래스명 extends Thread{
			public void run(){}//반드시 오버라이딩 
		}

방법 2)Runnable 인터페이스를 구현해서 정의
	형식> class 클래스명 implements Runnable{
			public void run(){}//반드시 오버라이딩 
		}
		
--쓰레드의 우선순위(priority of thread)
	작업의 중요도에 따라 쓰레드의 우선순위를 다르게 하여
	특정 쓰레드가 더 많은 작업시간을 갖도록 할 수 있다.

--쓰레드의 실행제어 
	join(), join(long millis), join(long millis, int nanos) 
	지정된 시간동안 쓰레드가 실행되도록한다
    지정된 시간이 지나거나 작업이 종료되면 join()을 호출한 스레드로 다시 돌아와
	실행을 계속한다.
	
--쓰레드의 동기화 - wait(), notify(), notifyAll()
	동기화의 효율을 높이기 위해 wait(), notify()를 사용
	Object 클래스에 정의되어 있으며, 동기화 블록 내에서만 사용할수 있다
	1) wait() : 객체의 lock을 풀고 해당객체의 쓰레드를 waiting pool에 넣는다
	2) notify() : waiting pool에서 대기중인 쓰레드 중의 하나를 깨운다
	3) notifyAll() : waiting pool에서 대기중인 모든 쓰레드를 깨운다



